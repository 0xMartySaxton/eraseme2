name: Publish NPM Release
on:
  push
  # push:
  #   tags: evm-*

jobs:
  dump_contexts_to_log:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/validate-package-version-and-git-tag

      - name: eraseme
        run: dummyCommandToAbortThisJob

      - name: Extract version from tag
        id: juju
        run: |
          gitTag=`bash -c '[[ ${{ github.ref }} =~ evm-(.*) ]]; echo ${BASH_REMATCH[1]}'`
          echo gitTag=$gitTag >> "$GITHUB_OUTPUT"

      - name: get-npm-version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@main
        with:
          path: evm

      # - name: Compare release tag with package.json version
      #   id: compare_package_json_version
      #   run: echo '${{ steps.package-version.outputs.current-version }}'

      - name: abort if tag doesn't match package version
        if: ${{steps.juju.outputs.gitTag != steps.package-version.outputs.current-version}}
        run: dummyCommandToAbortThisJob

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: build and publish
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          cd evm \
          && pnpm install --filter . \
          && pnpm run build \
          && pnpm publish --no-git-checks --dry-run
